@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,700&subset=latin,latin-ext);
@import url(http://fonts.googleapis.com/css?family=Patrick+Hand&subset=latin,latin-ext);
@import url(http://fonts.googleapis.com/css?family=Patrick+Hand+SC&subset=latin,latin-ext);
/* normalize.css v2.1.2 | MIT License | git.io/normalize */
/* ========================================================================== HTML5 display definitions ========================================================================== */
/** Correct `block` display not defined in IE 8/9. */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary { display: block; }

/** Correct `inline-block` display not defined in IE 8/9. */
audio, canvas, video { display: inline-block; }

/** Prevent modern browsers from displaying `audio` without controls. Remove excess height in iOS 5 devices. */
audio:not([controls]) { display: none; height: 0; }

/** Address styling not present in IE 8/9. */
[hidden] { display: none; }

/* ========================================================================== Base ========================================================================== */
/** 1. Set default font family to sans-serif. 2. Prevent iOS text size adjust after orientation change, without disabling user zoom. */
html { font-family: sans-serif; /* 1 */ -ms-text-size-adjust: 100%; /* 2 */ -webkit-text-size-adjust: 100%; /* 2 */ }

/** Remove default margin. */
body { margin: 0; }

/* ========================================================================== Links ========================================================================== */
/** Address `outline` inconsistency between Chrome and other browsers. */
a:focus { outline: none; }

/** Improve readability when focused and also mouse hovered in all browsers. */
a:active, a:hover { outline: 0; }

/* ========================================================================== Typography ========================================================================== */
/** Address variable `h1` font-size and margin within `section` and `article` contexts in Firefox 4+, Safari 5, and Chrome. */
h1 { font-size: 2em; margin: 0.67em 0; }

/** Address styling not present in IE 8/9, Safari 5, and Chrome. */
abbr[title] { border-bottom: 1px dotted; }

/** Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome. */
b, strong { font-weight: bold; }

/** Address styling not present in Safari 5 and Chrome. */
dfn { font-style: italic; }

/** Address differences between Firefox and other browsers. */
hr { -moz-box-sizing: content-box; box-sizing: content-box; height: 0; }

/** Address styling not present in IE 8/9. */
mark { background: #ff0; color: #000; }

/** Correct font family set oddly in Safari 5 and Chrome. */
code, kbd, pre, samp { font-family: monospace, serif; font-size: 1em; }

/** Improve readability of pre-formatted text in all browsers. */
pre { white-space: pre-wrap; }

/** Set consistent quote types. */
q { quotes: "\201C" "\201D" "\2018" "\2019"; }

/** Address inconsistent and variable font size in all browsers. */
small { font-size: 80%; }

/** Prevent `sub` and `sup` affecting `line-height` in all browsers. */
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

/* ========================================================================== Embedded content ========================================================================== */
/** Remove border when inside `a` element in IE 8/9. */
img { border: 0; }

/* Responsive images */
img { max-width: 100%; height: auto; }

/** Correct overflow displayed oddly in IE 9. */
svg:not(:root) { overflow: hidden; }

/* ========================================================================== Figures ========================================================================== */
/** Address margin not present in IE 8/9 and Safari 5. */
figure { margin: 0; }

/* ========================================================================== Forms ========================================================================== */
/** Define consistent border, margin, and padding. */
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; }

/** 1. Correct `color` not being inherited in IE 8/9. 2. Remove padding so people aren't caught out if they zero out fieldsets. */
legend { border: 0; /* 1 */ padding: 0; /* 2 */ }

/** 1. Correct font family not being inherited in all browsers. 2. Correct font size not being inherited in all browsers. 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome. */
button, input, select, textarea { font-family: inherit; /* 1 */ font-size: 100%; /* 2 */ margin: 0; /* 3 */ }

/** Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet. */
button, input { line-height: normal; }

/** Address inconsistent `text-transform` inheritance for `button` and `select`. All other form control elements do not inherit `text-transform` values. Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+. Correct `select` style inheritance in Firefox 4+ and Opera. */
button, select { text-transform: none; }

/** 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls. 2. Correct inability to style clickable `input` types in iOS. 3. Improve usability and consistency of cursor style between image-type `input` and others. */
button, html input[type="button"], input[type="reset"], input[type="submit"] { -webkit-appearance: button; /* 2 */ cursor: pointer; /* 3 */ }

/** Re-set default cursor for disabled elements. */
button[disabled], html input[disabled] { cursor: default; }

/** 1. Address box sizing set to `content-box` in IE 8/9. 2. Remove excess padding in IE 8/9. */
input[type="checkbox"], input[type="radio"] { box-sizing: border-box; /* 1 */ padding: 0; /* 2 */ }

/** 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome. 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome (include `-moz` to future-proof). */
input[type="search"] { -webkit-appearance: textfield; /* 1 */ -moz-box-sizing: content-box; -webkit-box-sizing: content-box; /* 2 */ box-sizing: content-box; }

/** Remove inner padding and search cancel button in Safari 5 and Chrome on OS X. */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

/** Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }

/** 1. Remove default vertical scrollbar in IE 8/9. 2. Improve readability and alignment in all browsers. */
textarea { overflow: auto; /* 1 */ vertical-align: top; /* 2 */ }

/* ========================================================================== Tables ========================================================================== */
/** Remove most spacing between table cells. */
table { border-collapse: collapse; border-spacing: 0; }

/** Import grid settings : */
/** Import gridle : */
/** Gridle (.scss) Gridle is an one and unique grid system file that allows you to generate almost all grid you've ever dreamt about.  Copyright (c) 2013 Olivier Bossel  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  @created 	25.03.13 @updated 	23.06.13 @author 		Olivier Bossel <olivier.bossel@gmail.com> @version 	1.0 */
/** gridle configuration vars : */
/** Imports : */
/** Vars : */
/** Init gridle Creating the silent classes with user configuration : */
.push-0, .push-mobile-0, .push-tablet-0, .push-1, .push-mobile-1, .push-tablet-1, .push-2, .push-mobile-2, .push-tablet-2, .push-3, .push-mobile-3, .push-tablet-3, .push-4, .push-mobile-4, .push-tablet-4, .push-5, .push-mobile-5, .push-tablet-5, .push-6, .push-mobile-6, .push-tablet-6, .push-7, .push-mobile-7, .push-tablet-7, .push-8, .push-mobile-8, .push-tablet-8, .push-9, .push-mobile-9, .push-tablet-9, .push-10, .push-mobile-10, .push-tablet-10, .push-11, .push-mobile-11, .push-tablet-11, .push-12, .push-mobile-12, .push-tablet-12, .pull-0, .pull-mobile-0, .pull-tablet-0, .pull-1, .pull-mobile-1, .pull-tablet-1, .pull-2, .pull-mobile-2, .pull-tablet-2, .pull-3, .pull-mobile-3, .pull-tablet-3, .pull-4, .pull-mobile-4, .pull-tablet-4, .pull-5, .pull-mobile-5, .pull-tablet-5, .pull-6, .pull-mobile-6, .pull-tablet-6, .pull-7, .pull-mobile-7, .pull-tablet-7, .pull-8, .pull-mobile-8, .pull-tablet-8, .pull-9, .pull-mobile-9, .pull-tablet-9, .pull-10, .pull-mobile-10, .pull-tablet-10, .pull-11, .pull-mobile-11, .pull-tablet-11, .pull-12, .pull-mobile-12, .pull-tablet-12 { position: relative; }

.container, .grid-container, .container-12 { width: 100%; /* For modern browsers */ /* For IE 6/7 (trigger hasLayout) */ }
.container:before, .grid-container:before, .container-12:before, .container:after, .grid-container:after, .container-12:after { content: ""; display: table; }
.container:after, .grid-container:after, .container-12:after { clear: both; }
.container, .grid-container, .container-12 { zoom: 1; }

.grid-0, .grid-mobile-0, .grid-tablet-0, .grid-1, .grid-mobile-1, .grid-tablet-1, .grid-2, .grid-mobile-2, .grid-tablet-2, .grid-3, .grid-mobile-3, .grid-tablet-3, .grid-4, .grid-mobile-4, .grid-tablet-4, .grid-5, .grid-mobile-5, .grid-tablet-5, .grid-6, .grid-mobile-6, .grid-tablet-6, .grid-7, .grid-mobile-7, .grid-tablet-7, .grid-8, .grid-mobile-8, .grid-tablet-8, .grid-9, .grid-mobile-9, .grid-tablet-9, .grid-10, .grid-mobile-10, .grid-tablet-10, .grid-11, .grid-mobile-11, .grid-tablet-11, .grid-12, .grid-mobile-12, .grid-tablet-12 { display: inline-block; position: relative; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }

/** Common css that cannot be extended cause of variables : */
/** Register an state :  @param 	String 	$name 		The state name @param 	int 	$min-width 	The min width @param 	int 	$max-width 	The max width */
/** Register default states : */
/** Responsive helpers mixins :  @param 	String 	$media 	The media name to response for */
/** Container mixin : */
/** Grid mixin : Set the width of the specified grid column :  @param 	int 		$columns 				The columns to generate	 */
/** push : Push the element of the count of column wanted  @param 	int 		$columns 				The columns to generate	 @param 	boolean 	$important 			Define if need to add !important at the end of the properties */
/** pull : Pull the element of the count of column wanted  @param 	int 		$columns 				The columns to generate	 @param 	boolean 	$important 			Define if need to add !important at the end of the properties */
/** push : Push the element of the count of column wanted  @param 	int 		$columns 				The columns to generate	 @param 	boolean 	$important 			Define if need to add !important at the end of the properties */
/** pull : Pull the element of the count of column wanted  @param 	int 		$columns 				The columns to generate	 @param 	boolean 	$important 			Define if need to add !important at the end of the properties */
/** Hide on :  @param 	String 	$media  On what state */
/** Not visible on :  @param 	String 	$media 	What to hide (one of the 3 state classes name) */
/** Show on  @param 	String 	$media 	What to hide (one of the 3 state classes name) */
/** Visible on :  @param 	String 	$media 	On what state */
/** Gridle Right : */
/** Gridle clear :  @param 	String 	$clear-direction 	The direction to clear @param 	String 	$state 				The state */
/** Gridle no gutter :  @param 	String 	$side 				The side to clear @param 	String 	$state 				The state */
/** Get the media queries variables :  @param 	int 	$index 	 	The media query indes @param 	String 	$var 		The media query variable name @return 	String|int 			The variable value */
/** Get the index of an media query by name  @param 	String 	$name 	The nme of the media query @return 	int 			The index of the media query */
/** gridle mixin : Generate all the classes needed for a grid */
/** Configure : */
/** Generate classes : */
/** Windows 8 fix for snap mode : */
@media screen and (max-width: 400px) { @-ms-viewport { width: device-width; } }
.container [class*="grid-"] [class*="grid-"]:first-child, .container [class*="grid-"] [class*="grid-"].alpha, .grid-container [class*="grid-"] [class*="grid-"]:first-child, .grid-container [class*="grid-"] [class*="grid-"].alpha, .container-12 [class*="grid-"] [class*="grid-"]:first-child, .container-12 [class*="grid-"] [class*="grid-"].alpha { padding-left: 0 !important; }
.container [class*="grid-"] [class*="grid-"]:last-child, .container [class*="grid-"] [class*="grid-"].omega, .grid-container [class*="grid-"] [class*="grid-"]:last-child, .grid-container [class*="grid-"] [class*="grid-"].omega, .container-12 [class*="grid-"] [class*="grid-"]:last-child, .container-12 [class*="grid-"] [class*="grid-"].omega { padding-right: 0 !important; }

.grid-0 { width: 0%; *width: expression((this.parentNode.clientWidth/12*0 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-0 { left: 0%; }

.pull-0 { right: 0%; }

.prefix-0 { margin-left: 0%; }

.suffix-0 { margin-right: 0%; }

.grid-1 { width: 8.33333%; *width: expression((this.parentNode.clientWidth/12*1 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-1 { left: 8.33333%; }

.pull-1 { right: 8.33333%; }

.prefix-1 { margin-left: 8.33333%; }

.suffix-1 { margin-right: 8.33333%; }

.grid-2 { width: 16.66667%; *width: expression((this.parentNode.clientWidth/12*2 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-2 { left: 16.66667%; }

.pull-2 { right: 16.66667%; }

.prefix-2 { margin-left: 16.66667%; }

.suffix-2 { margin-right: 16.66667%; }

.grid-3 { width: 25.0%; *width: expression((this.parentNode.clientWidth/12*3 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-3 { left: 25.0%; }

.pull-3 { right: 25.0%; }

.prefix-3 { margin-left: 25.0%; }

.suffix-3 { margin-right: 25.0%; }

.grid-4 { width: 33.33333%; *width: expression((this.parentNode.clientWidth/12*4 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-4 { left: 33.33333%; }

.pull-4 { right: 33.33333%; }

.prefix-4 { margin-left: 33.33333%; }

.suffix-4 { margin-right: 33.33333%; }

.grid-5 { width: 41.66667%; *width: expression((this.parentNode.clientWidth/12*5 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-5 { left: 41.66667%; }

.pull-5 { right: 41.66667%; }

.prefix-5 { margin-left: 41.66667%; }

.suffix-5 { margin-right: 41.66667%; }

.grid-6 { width: 50.0%; *width: expression((this.parentNode.clientWidth/12*6 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-6 { left: 50.0%; }

.pull-6 { right: 50.0%; }

.prefix-6 { margin-left: 50.0%; }

.suffix-6 { margin-right: 50.0%; }

.grid-7 { width: 58.33333%; *width: expression((this.parentNode.clientWidth/12*7 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-7 { left: 58.33333%; }

.pull-7 { right: 58.33333%; }

.prefix-7 { margin-left: 58.33333%; }

.suffix-7 { margin-right: 58.33333%; }

.grid-8 { width: 66.66667%; *width: expression((this.parentNode.clientWidth/12*8 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-8 { left: 66.66667%; }

.pull-8 { right: 66.66667%; }

.prefix-8 { margin-left: 66.66667%; }

.suffix-8 { margin-right: 66.66667%; }

.grid-9 { width: 75.0%; *width: expression((this.parentNode.clientWidth/12*9 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-9 { left: 75.0%; }

.pull-9 { right: 75.0%; }

.prefix-9 { margin-left: 75.0%; }

.suffix-9 { margin-right: 75.0%; }

.grid-10 { width: 83.33333%; *width: expression((this.parentNode.clientWidth/12*10 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-10 { left: 83.33333%; }

.pull-10 { right: 83.33333%; }

.prefix-10 { margin-left: 83.33333%; }

.suffix-10 { margin-right: 83.33333%; }

.grid-11 { width: 91.66667%; *width: expression((this.parentNode.clientWidth/12*11 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-11 { left: 91.66667%; }

.pull-11 { right: 91.66667%; }

.prefix-11 { margin-left: 91.66667%; }

.suffix-11 { margin-right: 91.66667%; }

.grid-12 { width: 100.0%; *width: expression((this.parentNode.clientWidth/12*12 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.push-12 { left: 100.0%; }

.pull-12 { right: 100.0%; }

.prefix-12 { margin-left: 100.0%; }

.suffix-12 { margin-right: 100.0%; }

.hide { display: none; }

.not-visible { visibility: hidden; }

.show { display: block; }

.visible { visibility: visible; }

.float-left { float: left; }

.float-right { float: right; }

.clear { clear: both; }

.clear-left { clear: left; }

.clear-right { clear: right; }

.no-gutter, .no-margin { padding-left: 0 !important; padding-right: 0 !important; }

.no-gutter-left, .no-margin-left { padding-left: 0 !important; }

.no-gutter-right, .no-margin-right { padding-right: 0 !important; }

.auto-height { height: inherit; }

.grid-0, .grid-mobile-0, .grid-tablet-0, .grid-1, .grid-mobile-1, .grid-tablet-1, .grid-2, .grid-mobile-2, .grid-tablet-2, .grid-3, .grid-mobile-3, .grid-tablet-3, .grid-4, .grid-mobile-4, .grid-tablet-4, .grid-5, .grid-mobile-5, .grid-tablet-5, .grid-6, .grid-mobile-6, .grid-tablet-6, .grid-7, .grid-mobile-7, .grid-tablet-7, .grid-8, .grid-mobile-8, .grid-tablet-8, .grid-9, .grid-mobile-9, .grid-tablet-9, .grid-10, .grid-mobile-10, .grid-tablet-10, .grid-11, .grid-mobile-11, .grid-tablet-11, .grid-12, .grid-mobile-12, .grid-tablet-12 { float: left; direction: ltr; padding: 0 15px; }

@media screen and (min-width: 0) and (max-width: 400px) { .grid-mobile-0 { width: 0%; *width: expression((this.parentNode.clientWidth/12*0 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-0 { left: 0%; }
  .pull-mobile-0 { right: 0%; }
  .prefix-mobile-0 { margin-left: 0%; }
  .suffix-mobile-0 { margin-right: 0%; }
  .grid-mobile-1 { width: 8.33333%; *width: expression((this.parentNode.clientWidth/12*1 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-1 { left: 8.33333%; }
  .pull-mobile-1 { right: 8.33333%; }
  .prefix-mobile-1 { margin-left: 8.33333%; }
  .suffix-mobile-1 { margin-right: 8.33333%; }
  .grid-mobile-2 { width: 16.66667%; *width: expression((this.parentNode.clientWidth/12*2 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-2 { left: 16.66667%; }
  .pull-mobile-2 { right: 16.66667%; }
  .prefix-mobile-2 { margin-left: 16.66667%; }
  .suffix-mobile-2 { margin-right: 16.66667%; }
  .grid-mobile-3 { width: 25.0%; *width: expression((this.parentNode.clientWidth/12*3 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-3 { left: 25.0%; }
  .pull-mobile-3 { right: 25.0%; }
  .prefix-mobile-3 { margin-left: 25.0%; }
  .suffix-mobile-3 { margin-right: 25.0%; }
  .grid-mobile-4 { width: 33.33333%; *width: expression((this.parentNode.clientWidth/12*4 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-4 { left: 33.33333%; }
  .pull-mobile-4 { right: 33.33333%; }
  .prefix-mobile-4 { margin-left: 33.33333%; }
  .suffix-mobile-4 { margin-right: 33.33333%; }
  .grid-mobile-5 { width: 41.66667%; *width: expression((this.parentNode.clientWidth/12*5 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-5 { left: 41.66667%; }
  .pull-mobile-5 { right: 41.66667%; }
  .prefix-mobile-5 { margin-left: 41.66667%; }
  .suffix-mobile-5 { margin-right: 41.66667%; }
  .grid-mobile-6 { width: 50.0%; *width: expression((this.parentNode.clientWidth/12*6 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-6 { left: 50.0%; }
  .pull-mobile-6 { right: 50.0%; }
  .prefix-mobile-6 { margin-left: 50.0%; }
  .suffix-mobile-6 { margin-right: 50.0%; }
  .grid-mobile-7 { width: 58.33333%; *width: expression((this.parentNode.clientWidth/12*7 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-7 { left: 58.33333%; }
  .pull-mobile-7 { right: 58.33333%; }
  .prefix-mobile-7 { margin-left: 58.33333%; }
  .suffix-mobile-7 { margin-right: 58.33333%; }
  .grid-mobile-8 { width: 66.66667%; *width: expression((this.parentNode.clientWidth/12*8 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-8 { left: 66.66667%; }
  .pull-mobile-8 { right: 66.66667%; }
  .prefix-mobile-8 { margin-left: 66.66667%; }
  .suffix-mobile-8 { margin-right: 66.66667%; }
  .grid-mobile-9 { width: 75.0%; *width: expression((this.parentNode.clientWidth/12*9 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-9 { left: 75.0%; }
  .pull-mobile-9 { right: 75.0%; }
  .prefix-mobile-9 { margin-left: 75.0%; }
  .suffix-mobile-9 { margin-right: 75.0%; }
  .grid-mobile-10 { width: 83.33333%; *width: expression((this.parentNode.clientWidth/12*10 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-10 { left: 83.33333%; }
  .pull-mobile-10 { right: 83.33333%; }
  .prefix-mobile-10 { margin-left: 83.33333%; }
  .suffix-mobile-10 { margin-right: 83.33333%; }
  .grid-mobile-11 { width: 91.66667%; *width: expression((this.parentNode.clientWidth/12*11 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-11 { left: 91.66667%; }
  .pull-mobile-11 { right: 91.66667%; }
  .prefix-mobile-11 { margin-left: 91.66667%; }
  .suffix-mobile-11 { margin-right: 91.66667%; }
  .grid-mobile-12 { width: 100.0%; *width: expression((this.parentNode.clientWidth/12*12 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-mobile-12 { left: 100.0%; }
  .pull-mobile-12 { right: 100.0%; }
  .prefix-mobile-12 { margin-left: 100.0%; }
  .suffix-mobile-12 { margin-right: 100.0%; }
  .hide-mobile { display: none; }
  .not-visible-mobile { visibility: hidden; }
  .show-mobile { display: block; }
  .visible-mobile { visibility: visible; }
  .float-mobile-left { float: left; }
  .float-mobile-right { float: right; }
  .clear-mobile { clear: both; }
  .clear-mobile-left { clear: left; }
  .clear-mobile-right { clear: right; }
  .no-gutter-mobile, .no-margin-mobile { padding-left: 0 !important; padding-right: 0 !important; }
  .no-gutter-mobile-left, .no-margin-mobile-left { padding-left: 0 !important; }
  .no-gutter-mobile-right, .no-margin-mobile-right { padding-right: 0 !important; }
  .auto-height-mobile { height: inherit; } }
@media screen and (min-width: 401px) and (max-width: 767px) { .grid-tablet-0 { width: 0%; *width: expression((this.parentNode.clientWidth/12*0 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-0 { left: 0%; }
  .pull-tablet-0 { right: 0%; }
  .prefix-tablet-0 { margin-left: 0%; }
  .suffix-tablet-0 { margin-right: 0%; }
  .grid-tablet-1 { width: 8.33333%; *width: expression((this.parentNode.clientWidth/12*1 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-1 { left: 8.33333%; }
  .pull-tablet-1 { right: 8.33333%; }
  .prefix-tablet-1 { margin-left: 8.33333%; }
  .suffix-tablet-1 { margin-right: 8.33333%; }
  .grid-tablet-2 { width: 16.66667%; *width: expression((this.parentNode.clientWidth/12*2 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-2 { left: 16.66667%; }
  .pull-tablet-2 { right: 16.66667%; }
  .prefix-tablet-2 { margin-left: 16.66667%; }
  .suffix-tablet-2 { margin-right: 16.66667%; }
  .grid-tablet-3 { width: 25.0%; *width: expression((this.parentNode.clientWidth/12*3 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-3 { left: 25.0%; }
  .pull-tablet-3 { right: 25.0%; }
  .prefix-tablet-3 { margin-left: 25.0%; }
  .suffix-tablet-3 { margin-right: 25.0%; }
  .grid-tablet-4 { width: 33.33333%; *width: expression((this.parentNode.clientWidth/12*4 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-4 { left: 33.33333%; }
  .pull-tablet-4 { right: 33.33333%; }
  .prefix-tablet-4 { margin-left: 33.33333%; }
  .suffix-tablet-4 { margin-right: 33.33333%; }
  .grid-tablet-5 { width: 41.66667%; *width: expression((this.parentNode.clientWidth/12*5 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-5 { left: 41.66667%; }
  .pull-tablet-5 { right: 41.66667%; }
  .prefix-tablet-5 { margin-left: 41.66667%; }
  .suffix-tablet-5 { margin-right: 41.66667%; }
  .grid-tablet-6 { width: 50.0%; *width: expression((this.parentNode.clientWidth/12*6 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-6 { left: 50.0%; }
  .pull-tablet-6 { right: 50.0%; }
  .prefix-tablet-6 { margin-left: 50.0%; }
  .suffix-tablet-6 { margin-right: 50.0%; }
  .grid-tablet-7 { width: 58.33333%; *width: expression((this.parentNode.clientWidth/12*7 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-7 { left: 58.33333%; }
  .pull-tablet-7 { right: 58.33333%; }
  .prefix-tablet-7 { margin-left: 58.33333%; }
  .suffix-tablet-7 { margin-right: 58.33333%; }
  .grid-tablet-8 { width: 66.66667%; *width: expression((this.parentNode.clientWidth/12*8 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-8 { left: 66.66667%; }
  .pull-tablet-8 { right: 66.66667%; }
  .prefix-tablet-8 { margin-left: 66.66667%; }
  .suffix-tablet-8 { margin-right: 66.66667%; }
  .grid-tablet-9 { width: 75.0%; *width: expression((this.parentNode.clientWidth/12*9 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-9 { left: 75.0%; }
  .pull-tablet-9 { right: 75.0%; }
  .prefix-tablet-9 { margin-left: 75.0%; }
  .suffix-tablet-9 { margin-right: 75.0%; }
  .grid-tablet-10 { width: 83.33333%; *width: expression((this.parentNode.clientWidth/12*10 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-10 { left: 83.33333%; }
  .pull-tablet-10 { right: 83.33333%; }
  .prefix-tablet-10 { margin-left: 83.33333%; }
  .suffix-tablet-10 { margin-right: 83.33333%; }
  .grid-tablet-11 { width: 91.66667%; *width: expression((this.parentNode.clientWidth/12*11 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-11 { left: 91.66667%; }
  .pull-tablet-11 { right: 91.66667%; }
  .prefix-tablet-11 { margin-left: 91.66667%; }
  .suffix-tablet-11 { margin-right: 91.66667%; }
  .grid-tablet-12 { width: 100.0%; *width: expression((this.parentNode.clientWidth/12*12 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }
  .push-tablet-12 { left: 100.0%; }
  .pull-tablet-12 { right: 100.0%; }
  .prefix-tablet-12 { margin-left: 100.0%; }
  .suffix-tablet-12 { margin-right: 100.0%; }
  .hide-tablet { display: none; }
  .not-visible-tablet { visibility: hidden; }
  .show-tablet { display: block; }
  .visible-tablet { visibility: visible; }
  .float-tablet-left { float: left; }
  .float-tablet-right { float: right; }
  .clear-tablet { clear: both; }
  .clear-tablet-left { clear: left; }
  .clear-tablet-right { clear: right; }
  .no-gutter-tablet, .no-margin-tablet { padding-left: 0 !important; padding-right: 0 !important; }
  .no-gutter-tablet-left, .no-margin-tablet-left { padding-left: 0 !important; }
  .no-gutter-tablet-right, .no-margin-tablet-right { padding-right: 0 !important; }
  .auto-height-tablet { height: inherit; } }
/** Max size : */
.container { max-width: 970px; margin: 0 auto; }

.grid-1, .grid-2, .grid-3, .grid-4, .grid-5, .grid-6, .grid-7, .grid-8, .grid-9, .grid-10, .grid-11, .grid-12 { z-index: 1; }

/* ========================================================================== Varijable ========================================================================== */
/* ========================================================================== Klase ========================================================================== */
.text-left { text-align: left; }

.uppercase { text-transform: uppercase; }

.m-t-20 { margin-top: 20px !important; }

.m-t-50 { margin-top: 50px !important; }

.m-r-15 { margin-right: 15px !important; }

.m-b-40 { margin-bottom: 40px !important; }

.test-box { width: 100%; min-height: 200px; background: #f1f1f1; outline: 1px solid rgba(0, 0, 0, 0.2); }

.text-blue { color: #6dcef4 !important; }

.text-dark { color: #2e3f49 !important; }

.text-green { color: #68c39f !important; }

.text-orange { color: #ffb14c !important; }

.text-pink { color: #e7a9d8 !important; }

.text-purple { color: #a68bbd !important; }

.text-tirkizna { color: #6dc1d0 !important; }

.text-red { color: #e37a7a !important; }

.text-brown { color: #cbaa83 !important; }

.text-dark-blue { color: #0078a8 !important; }

/* Radosnica  ========================================================================== Base styles: opinionated defaults ========================================================================== */
/* Remove text-shadow in selection highlight: h5bp.com/i These selection rule sets have to be separate. Customize the background color to match your design. */
::-moz-selection { background: #b3d4fc; text-shadow: none; }

::selection { background: #b3d4fc; text-shadow: none; }

/* A better looking default horizontal rule */
hr { display: block; height: 1px; border: 0; border-top: 1px solid #ccc; margin: 1em 0; padding: 0; }

/* Remove the gap between images and the bottom of their containers: h5bp.com/i/440 */
img { vertical-align: middle; }

/* Remove default fieldset styles. */
fieldset { border: 0; margin: 0; padding: 0; }

/* Allow only vertical resizing of textareas. */
textarea { resize: vertical; }

/* ========================================================================== Chrome Frame prompt ========================================================================== */
.chromeframe { margin: 0.2em 0; background: #ccc; color: #000; padding: 0.2em 0; }

/* ========================================================================== Main Styles ========================================================================== */
.cf { *zoom: 1; }
.cf:before, .cf:after { content: " "; display: table; }
.cf:after { clear: both; }

a, a:hover, a:visited, a:active { border: none; outline: none; }

html { font-size: 62.5%; font-family: 'Open Sans', sans-serif; }

body { background: url("../img/layout/body-bg.jpg") repeat; }

.container { width: 100%; max-width: 1200px; background: rgba(255, 255, 255, 0.5); margin: 50px auto; }

.accordion-slider { position: relative; width: 100%; height: auto; margin: 0 auto; padding: 0; }
.accordion-slider .slide-container { position: relative; overflow: hidden; max-height: 700px; }
.accordion-slider .slide-container .slide { position: absolute; top: 0; left: 0; margin: 0; padding: 0; float: left; width: 100%; margin-left: 1px; cursor: pointer; border-left: 1px solid #e6ddd5; }
.accordion-slider .slide-container .slide:first-child { border-left: none; }
.accordion-slider .slide-container .slide img { position: relative; display: block; width: 100%; height: auto; margin: 0; padding: 0; }
.accordion-slider .slide-container .slide .rating { display: block; position: absolute; top: 10px; left: 10px; background: rgba(255, 255, 255, 0.5); }
.accordion-slider .slide-container .slide .ribbon { position: absolute; bottom: 20px; left: 0; display: block; width: 100%; height: 20%; background: rgba(255, 255, 255, 0.5); }

/* ========================================================================== Print styles. Inlined to avoid required HTTP connection: h5bp.com/r ========================================================================== */
@media print { * { background: transparent !important; color: #000 !important; /* Black prints faster: h5bp.com/s */ box-shadow: none !important; text-shadow: none !important; }
  a, a:visited { text-decoration: underline; }
  a[href]:after { content: " (" attr(href) ")"; }
  abbr[title]:after { content: " (" attr(title) ")"; }
  /* Don't show links for images, or javascript/internal links */
  .ir a:after, a[href^="javascript:"]:after, a[href^="#"]:after { content: ""; }
  pre, blockquote { border: 1px solid #999; page-break-inside: avoid; }
  thead { display: table-header-group; /* h5bp.com/t */ }
  tr, img { page-break-inside: avoid; }
  img { max-width: 100% !important; }
  @page { margin: 0.5cm; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { page-break-after: avoid; } }
